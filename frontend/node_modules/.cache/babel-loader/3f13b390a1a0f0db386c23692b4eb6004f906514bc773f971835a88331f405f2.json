{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\boardroom\\\\frontend\\\\src\\\\pages\\\\Rooms\\\\Rooms.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AddRoomModal from '../../components/AddRoomModal/AddRoomModal';\nimport RoomCard from '../../components/RoomCard/RoomCard';\nimport styles from './Rooms.module.css';\nimport { getAllRooms } from '../../http';\n\n// const rooms = [\n//     {\n//         id: 1,\n//         topic: 'Which framework best for frontend ?',\n//         speakers: [\n//             {\n//                 id: 1,\n//                 name: 'John Doe',\n//                 avatar: '/images/monkey-avatar.png',\n//             },\n//             {\n//                 id: 2,\n//                 name: 'Jane Doe',\n//                 avatar: '/images/monkey-avatar.png',\n//             },\n//         ],\n//         totalPeople: 40,\n//     },\n//     {\n//         id: 3,\n//         topic: 'What’s new in machine learning?',\n//         speakers: [\n//             {\n//                 id: 1,\n//                 name: 'John Doe',\n//                 avatar: '/images/monkey-avatar.png',\n//             },\n//             {\n//                 id: 2,\n//                 name: 'Jane Doe',\n//                 avatar: '/images/monkey-avatar.png',\n//             },\n//         ],\n//         totalPeople: 40,\n//     },\n//     {\n//         id: 4,\n//         topic: 'Why people use stack overflow?',\n//         speakers: [\n//             {\n//                 id: 1,\n//                 name: 'John Doe',\n//                 avatar: '/images/monkey-avatar.png',\n//             },\n//             {\n//                 id: 2,\n//                 name: 'Jane Doe',\n//                 avatar: '/images/monkey-avatar.png',\n//             },\n//         ],\n//         totalPeople: 40,\n//     },\n//     {\n//         id: 5,\n//         topic: 'Artificial inteligence is the future?',\n//         speakers: [\n//             {\n//                 id: 1,\n//                 name: 'John Doe',\n//                 avatar: '/images/monkey-avatar.png',\n//             },\n//             {\n//                 id: 2,\n//                 name: 'Jane Doe',\n//                 avatar: '/images/monkey-avatar.png',\n//             },\n//         ],\n//         totalPeople: 40,\n//     },\n// ];\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Rooms = () => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [rooms, setRooms] = useState([]);\n  useEffect(() => {\n    const fetchRooms = async () => {\n      const {\n        data\n      } = await getAllRooms();\n      setRooms(data);\n    };\n    fetchRooms();\n  }, []);\n  function openModal() {\n    setShowModal(true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.roomsHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.left,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.heading,\n            children: \"All voice rooms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.searchBox,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/search-icon.png\",\n              alt: \"search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: styles.searchInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.right,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: openModal,\n            className: styles.startRoomButton,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/add-room-icon.png\",\n              alt: \"add-room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Start a room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.roomList,\n        children: rooms.map(room => /*#__PURE__*/_jsxDEV(RoomCard, {\n          room: room\n        }, room.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), showModal && /*#__PURE__*/_jsxDEV(AddRoomModal, {\n      onClose: () => setShowModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true);\n};\n_s(Rooms, \"evmrtxvKjkcSbrksq+aH9XnlAlQ=\");\n_c = Rooms;\nexport default Rooms;\nvar _c;\n$RefreshReg$(_c, \"Rooms\");","map":{"version":3,"names":["React","useState","useEffect","AddRoomModal","RoomCard","styles","getAllRooms","jsxDEV","_jsxDEV","Fragment","_Fragment","Rooms","_s","showModal","setShowModal","rooms","setRooms","fetchRooms","data","openModal","children","className","roomsHeader","left","heading","fileName","_jsxFileName","lineNumber","columnNumber","searchBox","src","alt","type","searchInput","right","onClick","startRoomButton","roomList","map","room","id","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/boardroom/frontend/src/pages/Rooms/Rooms.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AddRoomModal from '../../components/AddRoomModal/AddRoomModal';\r\nimport RoomCard from '../../components/RoomCard/RoomCard';\r\nimport styles from './Rooms.module.css';\r\nimport { getAllRooms } from '../../http';\r\n\r\n// const rooms = [\r\n//     {\r\n//         id: 1,\r\n//         topic: 'Which framework best for frontend ?',\r\n//         speakers: [\r\n//             {\r\n//                 id: 1,\r\n//                 name: 'John Doe',\r\n//                 avatar: '/images/monkey-avatar.png',\r\n//             },\r\n//             {\r\n//                 id: 2,\r\n//                 name: 'Jane Doe',\r\n//                 avatar: '/images/monkey-avatar.png',\r\n//             },\r\n//         ],\r\n//         totalPeople: 40,\r\n//     },\r\n//     {\r\n//         id: 3,\r\n//         topic: 'What’s new in machine learning?',\r\n//         speakers: [\r\n//             {\r\n//                 id: 1,\r\n//                 name: 'John Doe',\r\n//                 avatar: '/images/monkey-avatar.png',\r\n//             },\r\n//             {\r\n//                 id: 2,\r\n//                 name: 'Jane Doe',\r\n//                 avatar: '/images/monkey-avatar.png',\r\n//             },\r\n//         ],\r\n//         totalPeople: 40,\r\n//     },\r\n//     {\r\n//         id: 4,\r\n//         topic: 'Why people use stack overflow?',\r\n//         speakers: [\r\n//             {\r\n//                 id: 1,\r\n//                 name: 'John Doe',\r\n//                 avatar: '/images/monkey-avatar.png',\r\n//             },\r\n//             {\r\n//                 id: 2,\r\n//                 name: 'Jane Doe',\r\n//                 avatar: '/images/monkey-avatar.png',\r\n//             },\r\n//         ],\r\n//         totalPeople: 40,\r\n//     },\r\n//     {\r\n//         id: 5,\r\n//         topic: 'Artificial inteligence is the future?',\r\n//         speakers: [\r\n//             {\r\n//                 id: 1,\r\n//                 name: 'John Doe',\r\n//                 avatar: '/images/monkey-avatar.png',\r\n//             },\r\n//             {\r\n//                 id: 2,\r\n//                 name: 'Jane Doe',\r\n//                 avatar: '/images/monkey-avatar.png',\r\n//             },\r\n//         ],\r\n//         totalPeople: 40,\r\n//     },\r\n// ];\r\n\r\nconst Rooms = () => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [rooms, setRooms] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchRooms = async () => {\r\n            const { data } = await getAllRooms();\r\n            setRooms(data);\r\n        };\r\n        fetchRooms();\r\n    }, []);\r\n    function openModal() {\r\n        setShowModal(true);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className={styles.roomsHeader}>\r\n                    <div className={styles.left}>\r\n                        <span className={styles.heading}>All voice rooms</span>\r\n                        <div className={styles.searchBox}>\r\n                            <img src=\"/images/search-icon.png\" alt=\"search\" />\r\n                            <input type=\"text\" className={styles.searchInput} />\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.right}>\r\n                        <button\r\n                            onClick={openModal}\r\n                            className={styles.startRoomButton}\r\n                        >\r\n                            <img\r\n                                src=\"/images/add-room-icon.png\"\r\n                                alt=\"add-room\"\r\n                            />\r\n                            <span>Start a room</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.roomList}>\r\n                    {rooms.map((room) => (\r\n                        <RoomCard key={room.id} room={room} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            {showModal && <AddRoomModal onClose={() => setShowModal(false)} />}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Rooms;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,4CAA4C;AACrE,OAAOC,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,MAAM,MAAM,oBAAoB;AACvC,SAASC,WAAW,QAAQ,YAAY;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMZ,WAAW,CAAC,CAAC;MACpCU,QAAQ,CAACE,IAAI,CAAC;IAClB,CAAC;IACDD,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EACN,SAASE,SAASA,CAAA,EAAG;IACjBL,YAAY,CAAC,IAAI,CAAC;EACtB;EACA,oBACIN,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACIZ,OAAA;MAAKa,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACtBZ,OAAA;QAAKa,SAAS,EAAEhB,MAAM,CAACiB,WAAY;QAAAF,QAAA,gBAC/BZ,OAAA;UAAKa,SAAS,EAAEhB,MAAM,CAACkB,IAAK;UAAAH,QAAA,gBACxBZ,OAAA;YAAMa,SAAS,EAAEhB,MAAM,CAACmB,OAAQ;YAAAJ,QAAA,EAAC;UAAe;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACvDpB,OAAA;YAAKa,SAAS,EAAEhB,MAAM,CAACwB,SAAU;YAAAT,QAAA,gBAC7BZ,OAAA;cAAKsB,GAAG,EAAC,yBAAyB;cAACC,GAAG,EAAC;YAAQ;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAClDpB,OAAA;cAAOwB,IAAI,EAAC,MAAM;cAACX,SAAS,EAAEhB,MAAM,CAAC4B;YAAY;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACNpB,OAAA;UAAKa,SAAS,EAAEhB,MAAM,CAAC6B,KAAM;UAAAd,QAAA,eACzBZ,OAAA;YACI2B,OAAO,EAAEhB,SAAU;YACnBE,SAAS,EAAEhB,MAAM,CAAC+B,eAAgB;YAAAhB,QAAA,gBAElCZ,OAAA;cACIsB,GAAG,EAAC,2BAA2B;cAC/BC,GAAG,EAAC;YAAU;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjB,CAAC,eACFpB,OAAA;cAAAY,QAAA,EAAM;YAAY;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAENpB,OAAA;QAAKa,SAAS,EAAEhB,MAAM,CAACgC,QAAS;QAAAjB,QAAA,EAC3BL,KAAK,CAACuB,GAAG,CAAEC,IAAI,iBACZ/B,OAAA,CAACJ,QAAQ;UAAemC,IAAI,EAAEA;QAAK,GAApBA,IAAI,CAACC,EAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CACxC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACLf,SAAS,iBAAIL,OAAA,CAACL,YAAY;MAACsC,OAAO,EAAEA,CAAA,KAAM3B,YAAY,CAAC,KAAK;IAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACpE,CAAC;AAEX,CAAC;AAAChB,EAAA,CAhDID,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AAkDX,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}