{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useRef, useEffect, useCallback } from 'react';\nimport { useStateWithCallback } from './useStateWithCallback';\nimport { socketInit } from '../socket/index';\nimport { ACTIONS } from '../actions';\nexport const useWebRTC = (roomId, user) => {\n  _s();\n  const [clients, setClients] = useStateWithCallback([]);\n  const audioElements = useRef({});\n  const connections = useRef({});\n  const localMediaStream = useRef(null);\n  const socket = useRef(null);\n  useEffect(() => {\n    socket.current = socketInit();\n  }, []);\n  const addNewClients = useCallback((newClient, cb) => {\n    const lookingFor = clients.find(client => client.id === newClient.id);\n    if (lookingFor === undefined) {\n      setClients(existingClients => [...existingClients, newClient], cb);\n    }\n  }, [clients, setClients]);\n\n  //capture media\n  useEffect(() => {\n    const startCapture = async () => {\n      localMediaStream.current = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n    };\n    startCapture().then(stream => {\n      addNewClients(user, () => {\n        const localElement = audioElements.current[user.id];\n        if (localElement) {\n          localElement.volume = 0;\n          localElement.srcObject = localMediaStream.current;\n        }\n\n        // socket emit JOIN socket.io\n        socket.current.emit(ACTIONS.JOIN, {});\n      });\n    });\n  }, []);\n  useEffect(() => {\n    const handleNewPeer = async ({\n      peerId,\n      createOffer,\n      user: remoteUser\n    }) => {};\n    socket.current.on(ACTIONS.ADD_PEER, handleNewPeer);\n  }, []);\n  const provideRef = (instance, userId) => {\n    audioElements.current[userId] = instance;\n  };\n  return {\n    clients,\n    provideRef\n  };\n};\n_s(useWebRTC, \"tMzlJVVGF64zxpmXY4lqjB7QB8c=\", false, function () {\n  return [useStateWithCallback];\n});","map":{"version":3,"names":["useState","useRef","useEffect","useCallback","useStateWithCallback","socketInit","ACTIONS","useWebRTC","roomId","user","_s","clients","setClients","audioElements","connections","localMediaStream","socket","current","addNewClients","newClient","cb","lookingFor","find","client","id","undefined","existingClients","startCapture","navigator","mediaDevices","getUserMedia","audio","then","stream","localElement","volume","srcObject","emit","JOIN","handleNewPeer","peerId","createOffer","remoteUser","on","ADD_PEER","provideRef","instance","userId"],"sources":["C:/Users/Admin/Desktop/boardroom/frontend/src/hooks/useWebRTC.js"],"sourcesContent":["import { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { useStateWithCallback } from './useStateWithCallback';\r\nimport {socketInit} from '../socket/index';\r\nimport { ACTIONS } from '../actions';\r\n\r\nexport const useWebRTC = (roomId, user) => {\r\n    const [clients, setClients]= useStateWithCallback([]);\r\n    const audioElements = useRef({});\r\n    const connections = useRef({});\r\n    const localMediaStream = useRef(null);\r\n    const socket = useRef(null);\r\n    \r\n    useEffect(() =>{\r\n        socket.current = socketInit();\r\n    },[])\r\n\r\n    const addNewClients = useCallback(\r\n        (newClient, cb) => {\r\n            const lookingFor = clients.find((client) => client.id === newClient.id);\r\n            if (lookingFor === undefined){\r\n                setClients((existingClients) => [...existingClients, newClient], \r\n                cb\r\n            );}\r\n\r\n        },\r\n        [clients, setClients]\r\n    );\r\n\r\n    //capture media\r\n    useEffect(() => {   \r\n        const startCapture = async() => {\r\n            localMediaStream.current = \r\n            await navigator.mediaDevices.getUserMedia({\r\n                audio: true\r\n            });\r\n        };\r\n        startCapture().then((stream) => {\r\n            addNewClients(user, ()=>{\r\n                const localElement = audioElements.current[user.id];\r\n                if (localElement){\r\n                    localElement.volume = 0;\r\n                    localElement.srcObject = localMediaStream.current;\r\n                }\r\n\r\n                // socket emit JOIN socket.io\r\n                socket.current.emit(ACTIONS.JOIN, {});\r\n\r\n            })\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const handleNewPeer = async ({peerId, createOffer, user:remoteUser}) => {\r\n\r\n        }\r\n        socket.current.on(ACTIONS.ADD_PEER,handleNewPeer)\r\n\r\n    },[]);\r\n\r\n    const provideRef = (instance, userId) => {\r\n        audioElements.current[userId] = instance;\r\n\r\n};\r\n    return {clients, provideRef};\r\n};\r\n\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAChE,SAASC,oBAAoB,QAAQ,wBAAwB;AAC7D,SAAQC,UAAU,QAAO,iBAAiB;AAC1C,SAASC,OAAO,QAAQ,YAAY;AAEpC,OAAO,MAAMC,SAAS,GAAGA,CAACC,MAAM,EAAEC,IAAI,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAER,oBAAoB,CAAC,EAAE,CAAC;EACrD,MAAMS,aAAa,GAAGZ,MAAM,CAAC,CAAC,CAAC,CAAC;EAChC,MAAMa,WAAW,GAAGb,MAAM,CAAC,CAAC,CAAC,CAAC;EAC9B,MAAMc,gBAAgB,GAAGd,MAAM,CAAC,IAAI,CAAC;EACrC,MAAMe,MAAM,GAAGf,MAAM,CAAC,IAAI,CAAC;EAE3BC,SAAS,CAAC,MAAK;IACXc,MAAM,CAACC,OAAO,GAAGZ,UAAU,CAAC,CAAC;EACjC,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMa,aAAa,GAAGf,WAAW,CAC7B,CAACgB,SAAS,EAAEC,EAAE,KAAK;IACf,MAAMC,UAAU,GAAGV,OAAO,CAACW,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACC,EAAE,KAAKL,SAAS,CAACK,EAAE,CAAC;IACvE,IAAIH,UAAU,KAAKI,SAAS,EAAC;MACzBb,UAAU,CAAEc,eAAe,IAAK,CAAC,GAAGA,eAAe,EAAEP,SAAS,CAAC,EAC/DC,EACJ,CAAC;IAAC;EAEN,CAAC,EACD,CAACT,OAAO,EAAEC,UAAU,CACxB,CAAC;;EAED;EACAV,SAAS,CAAC,MAAM;IACZ,MAAMyB,YAAY,GAAG,MAAAA,CAAA,KAAW;MAC5BZ,gBAAgB,CAACE,OAAO,GACxB,MAAMW,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QACtCC,KAAK,EAAE;MACX,CAAC,CAAC;IACN,CAAC;IACDJ,YAAY,CAAC,CAAC,CAACK,IAAI,CAAEC,MAAM,IAAK;MAC5Bf,aAAa,CAACT,IAAI,EAAE,MAAI;QACpB,MAAMyB,YAAY,GAAGrB,aAAa,CAACI,OAAO,CAACR,IAAI,CAACe,EAAE,CAAC;QACnD,IAAIU,YAAY,EAAC;UACbA,YAAY,CAACC,MAAM,GAAG,CAAC;UACvBD,YAAY,CAACE,SAAS,GAAGrB,gBAAgB,CAACE,OAAO;QACrD;;QAEA;QACAD,MAAM,CAACC,OAAO,CAACoB,IAAI,CAAC/B,OAAO,CAACgC,IAAI,EAAE,CAAC,CAAC,CAAC;MAEzC,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENpC,SAAS,CAAC,MAAM;IACZ,MAAMqC,aAAa,GAAG,MAAAA,CAAO;MAACC,MAAM;MAAEC,WAAW;MAAEhC,IAAI,EAACiC;IAAU,CAAC,KAAK,CAExE,CAAC;IACD1B,MAAM,CAACC,OAAO,CAAC0B,EAAE,CAACrC,OAAO,CAACsC,QAAQ,EAACL,aAAa,CAAC;EAErD,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMM,UAAU,GAAGA,CAACC,QAAQ,EAAEC,MAAM,KAAK;IACrClC,aAAa,CAACI,OAAO,CAAC8B,MAAM,CAAC,GAAGD,QAAQ;EAEhD,CAAC;EACG,OAAO;IAACnC,OAAO;IAAEkC;EAAU,CAAC;AAChC,CAAC;AAACnC,EAAA,CA3DWH,SAAS;EAAA,QACWH,oBAAoB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}