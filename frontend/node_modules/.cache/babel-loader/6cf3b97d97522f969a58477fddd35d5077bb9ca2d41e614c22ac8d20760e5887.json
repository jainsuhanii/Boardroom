{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useRef } from 'react';\nimport freeice from 'freeice';\nimport { socketInit } from '../socket';\nimport { useStateWithCallback } from './useStateWithCallback';\nimport { ACTIONS } from '../actions';\nexport const useWebRTC = (roomId, user) => {\n  _s();\n  const [clients, setClients] = useStateWithCallback([]);\n  const audioElements = useRef({});\n  const connections = useRef({});\n  const localMediaStream = useRef(null);\n  const socket = useRef(null);\n  useEffect(() => {\n    socket.current = socketInit();\n    console.log(socket.current);\n  }, []);\n  const addNewClient = useCallback((newClient, cb) => {\n    const lookingFor = clients.some(client => client.id === newClient.id);\n    if (!lookingFor) {\n      setClients(existingClients => [...existingClients, newClient], cb);\n    }\n  }, [clients, setClients]);\n\n  // Capture media\n  useEffect(() => {\n    const startCapture = async () => {\n      localMediaStream.current = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n    };\n    startCapture().then(() => {\n      addNewClient(user, () => {\n        const localElement = audioElements.current[user.id];\n        if (localElement) {\n          localElement.volume = 0;\n          localElement.srcObject = localMediaStream.current;\n        }\n\n        // socket emit JOIN socketio\n        socket.current.emit(ACTIONS.JOIN, {\n          roomId,\n          user\n        });\n      });\n    });\n    return () => {\n      // leaving a room\n      localMediaStream.current.getTracks().forEach(track => {\n        track.stop();\n      });\n      socket.current.emit(ACTIONS.LEAVE, {\n        roomId\n      });\n    };\n  }, []);\n  useEffect(() => {\n    const handleNewPeer = async ({\n      peerId,\n      createOffer,\n      user: remoteUser\n    }) => {\n      // if already connected then give warning\n      if (peerId in connections.current) {\n        return console.warn(`You are already connected with ${peerId} (${user.name})`);\n      }\n      connections.current[peerId] = new RTCPeerConnection({\n        iceServers: freeice()\n      });\n\n      // Handle new ice candidate\n      connections.current[peerId].onicecandidate = event => {\n        socket.current.emit(ACTIONS.RELAY_ICE, {\n          peerId,\n          icecandidate: event.candidate\n        });\n      };\n\n      // handle on track on this connection\n      connections.current[peerId].ontrack = ({\n        streams: [remoteStream]\n      }) => {\n        addNewClient(remoteUser, () => {\n          if (audioElements.current[remoteUser.id]) {\n            audioElements.current[remoteUser.id].srcObject = remoteStream;\n          } else {\n            let settled = false;\n            const interval = setInterval(() => {\n              if (audioElements.current[remoteUser.id]) {\n                audioElements.current[remoteUser.id].srcObject = remoteStream;\n                settled = true;\n              }\n              if (settled) {\n                clearInterval(interval);\n              }\n            }, 1000);\n          }\n        });\n      };\n\n      // add local track to remote conections\n      localMediaStream.current.getTracks().forEach(track => {\n        connections.current[peerId].addTrack(track, localMediaStream.current);\n      });\n\n      // create offer\n      if (createOffer) {\n        const offer = await connections.current[peerId].createOffer();\n        await connections.current[peerId].setLocalDescription(offer);\n\n        // send offer to another client\n        socket.current.emit(ACTIONS.RELAY_SDP, {\n          peerId,\n          sessionDescription: offer\n        });\n      }\n    };\n    socket.current.on(ACTIONS.ADD_PEER, handleNewPeer);\n    return () => {\n      socket.current.off(ACTIONS.ADD_PEER);\n    };\n  }, []);\n\n  // handle icecandidate\n  useEffect(() => {\n    socket.current.on(ACTIONS.ICE_CANDIDATE, ({\n      peerId,\n      icecandidate\n    }) => {\n      if (icecandidate) {\n        connections.current[peerId].addIceCandidate(icecandidate);\n      }\n    });\n    return () => {\n      socket.current.off(ACTIONS.ICE_CANDIDATE);\n    };\n  }, []);\n\n  // handle SDP\n  useEffect(() => {\n    const handleRemoteSdp = async ({\n      peerId,\n      sessionDescription: remoteSessionDescription\n    }) => {\n      connections.current[peerId].setRemoteDescription(new RTCSessionDescription(remoteSessionDescription));\n\n      // if session description is type of offer then create an answer\n      if (remoteSessionDescription.type === 'offer') {\n        const connection = connections.current[peerId];\n        const answer = await connection.createAnswer();\n        connection.setLocalDescription(answer);\n        socket.current.emit(ACTIONS.RELAY_SDP, {\n          peerId,\n          sessionDescription: answer\n        });\n      }\n    };\n    socket.current.on(ACTIONS.SESSION_DESCRIPTION, handleRemoteSdp);\n    return () => {\n      socket.current.off(ACTIONS.SESSION_DESCRIPTION);\n    };\n  }, []);\n\n  // handle remove peer\n  useEffect(() => {\n    const handleRemovePeer = async ({\n      peerId,\n      userId\n    }) => {\n      if (connections.current[peerId]) {\n        connections.current[peerId].close();\n      }\n      delete connections.current[peerId];\n      delete audioElements.current[peerId];\n      console.log(userId);\n      setClients(list => list.filter(client => client.id !== userId));\n    };\n    socket.current.on(ACTIONS.REMOVE_PEER, handleRemovePeer);\n    return () => {\n      socket.current.off(ACTIONS.REMOVE_PEER);\n    };\n  }, []);\n  const provideRef = (instance, userId) => {\n    audioElements.current[userId] = instance;\n  };\n  return {\n    clients,\n    provideRef\n  };\n};\n_s(useWebRTC, \"ksM9rSuLqu6dP4rwJKw4UMLpEwY=\", false, function () {\n  return [useStateWithCallback];\n});","map":{"version":3,"names":["useCallback","useEffect","useRef","freeice","socketInit","useStateWithCallback","ACTIONS","useWebRTC","roomId","user","_s","clients","setClients","audioElements","connections","localMediaStream","socket","current","console","log","addNewClient","newClient","cb","lookingFor","some","client","id","existingClients","startCapture","navigator","mediaDevices","getUserMedia","audio","then","localElement","volume","srcObject","emit","JOIN","getTracks","forEach","track","stop","LEAVE","handleNewPeer","peerId","createOffer","remoteUser","warn","name","RTCPeerConnection","iceServers","onicecandidate","event","RELAY_ICE","icecandidate","candidate","ontrack","streams","remoteStream","settled","interval","setInterval","clearInterval","addTrack","offer","setLocalDescription","RELAY_SDP","sessionDescription","on","ADD_PEER","off","ICE_CANDIDATE","addIceCandidate","handleRemoteSdp","remoteSessionDescription","setRemoteDescription","RTCSessionDescription","type","connection","answer","createAnswer","SESSION_DESCRIPTION","handleRemovePeer","userId","close","list","filter","REMOVE_PEER","provideRef","instance"],"sources":["C:/Users/Admin/Desktop/boardroom/frontend/src/hooks/useWebRTC.js"],"sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\r\nimport freeice from 'freeice';\r\nimport { socketInit } from '../socket';\r\nimport { useStateWithCallback } from './useStateWithCallback';\r\nimport { ACTIONS } from '../actions';\r\n\r\nexport const useWebRTC = (roomId, user) => {\r\n  const [clients, setClients] = useStateWithCallback([]);\r\n  const audioElements = useRef({});\r\n  const connections = useRef({});\r\n  const localMediaStream = useRef(null);\r\n  const socket = useRef(null);\r\n\r\n  useEffect(() => {\r\n    socket.current = socketInit();\r\n    console.log(socket.current);\r\n  }, []);\r\n\r\n  const addNewClient = useCallback(\r\n    (newClient, cb) => {\r\n      const lookingFor = clients.some((client) => client.id === newClient.id);\r\n\r\n      if (!lookingFor) {\r\n        setClients((existingClients) => [...existingClients, newClient], cb);\r\n      }\r\n    },\r\n    [clients, setClients]\r\n  );\r\n\r\n  // Capture media\r\n  useEffect(() => {\r\n    const startCapture = async () => {\r\n      localMediaStream.current = await navigator.mediaDevices.getUserMedia({\r\n        audio: true,\r\n      });\r\n    };\r\n    startCapture().then(() => {\r\n      addNewClient(user, () => {\r\n        const localElement = audioElements.current[user.id];\r\n        if (localElement) {\r\n          localElement.volume = 0;\r\n          localElement.srcObject = localMediaStream.current;\r\n        }\r\n\r\n        // socket emit JOIN socketio\r\n        socket.current.emit(ACTIONS.JOIN, { roomId, user });\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      // leaving a room\r\n      localMediaStream.current.getTracks().forEach((track) => {\r\n        track.stop();\r\n      });\r\n      socket.current.emit(ACTIONS.LEAVE, { roomId });\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleNewPeer = async ({ peerId, createOffer, user: remoteUser }) => {\r\n      // if already connected then give warning\r\n      if (peerId in connections.current) {\r\n        return console.warn(\r\n          `You are already connected with ${peerId} (${user.name})`\r\n        );\r\n      }\r\n\r\n      connections.current[peerId] = new RTCPeerConnection({\r\n        iceServers: freeice(),\r\n      });\r\n\r\n      // Handle new ice candidate\r\n      connections.current[peerId].onicecandidate = (event) => {\r\n        socket.current.emit(ACTIONS.RELAY_ICE, {\r\n          peerId,\r\n          icecandidate: event.candidate,\r\n        });\r\n      };\r\n\r\n      // handle on track on this connection\r\n      connections.current[peerId].ontrack = ({ streams: [remoteStream] }) => {\r\n        addNewClient(remoteUser, () => {\r\n          if (audioElements.current[remoteUser.id]) {\r\n            audioElements.current[remoteUser.id].srcObject = remoteStream;\r\n          } else {\r\n            let settled = false;\r\n            const interval = setInterval(() => {\r\n              if (audioElements.current[remoteUser.id]) {\r\n                audioElements.current[remoteUser.id].srcObject = remoteStream;\r\n                settled = true;\r\n              }\r\n\r\n              if (settled) {\r\n                clearInterval(interval);\r\n              }\r\n            }, 1000);\r\n          }\r\n        });\r\n      };\r\n\r\n      // add local track to remote conections\r\n      localMediaStream.current.getTracks().forEach((track) => {\r\n        connections.current[peerId].addTrack(track, localMediaStream.current);\r\n      });\r\n\r\n      // create offer\r\n      if (createOffer) {\r\n        const offer = await connections.current[peerId].createOffer();\r\n        await connections.current[peerId].setLocalDescription(offer);\r\n\r\n        // send offer to another client\r\n        socket.current.emit(ACTIONS.RELAY_SDP, {\r\n          peerId,\r\n          sessionDescription: offer,\r\n        });\r\n      }\r\n    };\r\n\r\n    socket.current.on(ACTIONS.ADD_PEER, handleNewPeer);\r\n\r\n    return () => {\r\n      socket.current.off(ACTIONS.ADD_PEER);\r\n    };\r\n  }, []);\r\n\r\n  // handle icecandidate\r\n  useEffect(() => {\r\n    socket.current.on(ACTIONS.ICE_CANDIDATE, ({ peerId, icecandidate }) => {\r\n      if (icecandidate) {\r\n        connections.current[peerId].addIceCandidate(icecandidate);\r\n      }\r\n    });\r\n    return () => {\r\n      socket.current.off(ACTIONS.ICE_CANDIDATE);\r\n    };\r\n  }, []);\r\n\r\n  // handle SDP\r\n  useEffect(() => {\r\n    const handleRemoteSdp = async ({\r\n      peerId,\r\n      sessionDescription: remoteSessionDescription,\r\n    }) => {\r\n      connections.current[peerId].setRemoteDescription(\r\n        new RTCSessionDescription(remoteSessionDescription)\r\n      );\r\n\r\n      // if session description is type of offer then create an answer\r\n      if (remoteSessionDescription.type === 'offer') {\r\n        const connection = connections.current[peerId];\r\n        const answer = await connection.createAnswer();\r\n\r\n        connection.setLocalDescription(answer);\r\n\r\n        socket.current.emit(ACTIONS.RELAY_SDP, {\r\n          peerId,\r\n          sessionDescription: answer,\r\n        });\r\n      }\r\n    };\r\n\r\n    socket.current.on(ACTIONS.SESSION_DESCRIPTION, handleRemoteSdp);\r\n    return () => {\r\n      socket.current.off(ACTIONS.SESSION_DESCRIPTION);\r\n    };\r\n  }, []);\r\n\r\n  // handle remove peer\r\n  useEffect(() => {\r\n    const handleRemovePeer = async ({ peerId, userId }) => {\r\n      if (connections.current[peerId]) {\r\n        connections.current[peerId].close();\r\n      }\r\n\r\n      delete connections.current[peerId];\r\n      delete audioElements.current[peerId];\r\n      console.log(userId);\r\n      setClients((list) => list.filter((client) => client.id !== userId));\r\n    };\r\n\r\n    socket.current.on(ACTIONS.REMOVE_PEER, handleRemovePeer);\r\n\r\n    return () => {\r\n      socket.current.off(ACTIONS.REMOVE_PEER);\r\n    };\r\n  }, []);\r\n\r\n  const provideRef = (instance, userId) => {\r\n    audioElements.current[userId] = instance;\r\n  };\r\n\r\n  return { clients, provideRef };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}