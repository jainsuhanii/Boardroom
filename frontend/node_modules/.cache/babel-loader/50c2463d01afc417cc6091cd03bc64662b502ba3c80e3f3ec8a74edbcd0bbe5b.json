{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\boardroom\\\\frontend\\\\src\\\\pages\\\\Rooms\\\\Rooms.jsx\";\nimport React from 'react';\nimport styles from './Rooms.module.css';\nimport RoomCard from '../../components/RoomCard/RoomCard';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst rooms = [{\n  id: 1,\n  topic: 'Which framework best for frontend ?',\n  speakers: [{\n    id: 1,\n    name: 'John Doe',\n    avatar: '/images/monkey-avatar.png'\n  }, {\n    id: 2,\n    name: 'Jane Doe',\n    avatar: '/images/monkey-avatar.png'\n  }],\n  totalPeople: 40\n}, {\n  id: 3,\n  topic: 'What’s new in machine learning?',\n  speakers: [{\n    id: 1,\n    name: 'John Doe',\n    avatar: '/images/monkey-avatar.png'\n  }, {\n    id: 2,\n    name: 'Jane Doe',\n    avatar: '/images/monkey-avatar.png'\n  }],\n  totalPeople: 40\n}, {\n  id: 4,\n  topic: 'Why people use stack overflow?',\n  speakers: [{\n    id: 1,\n    name: 'John Doe',\n    avatar: '/images/monkey-avatar.png'\n  }, {\n    id: 2,\n    name: 'Jane Doe',\n    avatar: '/images/monkey-avatar.png'\n  }],\n  totalPeople: 40\n}, {\n  id: 5,\n  topic: 'Artificial inteligence is the future?',\n  speakers: [{\n    id: 1,\n    name: 'John Doe',\n    avatar: '/images/monkey-avatar.png'\n  }, {\n    id: 2,\n    name: 'Jane Doe',\n    avatar: '/images/monkey-avatar.png'\n  }],\n  totalPeople: 40\n}];\nconst Rooms = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.roomsHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.left,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.heading,\n            children: \" All voice rooms \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.searchBox,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/search-icon.png\",\n              alt: \"search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: styles.searchInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.right,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.startRoomButton,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/add-room-icon.png\",\n              alt: \"add-room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Start a room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.roomList,\n          children: rooms.map(room => /*#__PURE__*/_jsxDEV(RoomCard, {\n            room: room\n          }, room.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = Rooms;\nexport default Rooms;\nvar _c;\n$RefreshReg$(_c, \"Rooms\");","map":{"version":3,"names":["React","styles","RoomCard","jsxDEV","_jsxDEV","Fragment","_Fragment","rooms","id","topic","speakers","name","avatar","totalPeople","Rooms","children","className","roomsHeader","left","heading","fileName","_jsxFileName","lineNumber","columnNumber","searchBox","src","alt","type","searchInput","right","startRoomButton","roomList","map","room","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/boardroom/frontend/src/pages/Rooms/Rooms.jsx"],"sourcesContent":["import React from 'react';\r\nimport styles from './Rooms.module.css';\r\nimport RoomCard from '../../components/RoomCard/RoomCard';\r\n\r\nconst rooms = [\r\n    {\r\n        id: 1,\r\n        topic: 'Which framework best for frontend ?',\r\n        speakers: [\r\n            {\r\n                id: 1,\r\n                name: 'John Doe',\r\n                avatar: '/images/monkey-avatar.png',\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Jane Doe',\r\n                avatar: '/images/monkey-avatar.png',\r\n            },\r\n        ],\r\n        totalPeople: 40,\r\n    },\r\n    {\r\n        id: 3,\r\n        topic: 'What’s new in machine learning?',\r\n        speakers: [\r\n            {\r\n                id: 1,\r\n                name: 'John Doe',\r\n                avatar: '/images/monkey-avatar.png',\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Jane Doe',\r\n                avatar: '/images/monkey-avatar.png',\r\n            },\r\n        ],\r\n        totalPeople: 40,\r\n    },\r\n    {\r\n        id: 4,\r\n        topic: 'Why people use stack overflow?',\r\n        speakers: [\r\n            {\r\n                id: 1,\r\n                name: 'John Doe',\r\n                avatar: '/images/monkey-avatar.png',\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Jane Doe',\r\n                avatar: '/images/monkey-avatar.png',\r\n            },\r\n        ],\r\n        totalPeople: 40,\r\n    },\r\n    {\r\n        id: 5,\r\n        topic: 'Artificial inteligence is the future?',\r\n        speakers: [\r\n            {\r\n                id: 1,\r\n                name: 'John Doe',\r\n                avatar: '/images/monkey-avatar.png',\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Jane Doe',\r\n                avatar: '/images/monkey-avatar.png',\r\n            },\r\n        ],\r\n        totalPeople: 40,\r\n    },\r\n]\r\n\r\nconst Rooms = () => {\r\n    return (\r\n        <>\r\n        <div className='container'>\r\n        <div className={styles.roomsHeader}>\r\n            <div className = {styles.left}>\r\n                <span className ={styles.heading}> All voice rooms </span>\r\n                <div className={styles.searchBox}>\r\n                    <img src =\"/images/search-icon.png\" alt=\"search\" />\r\n                    <input type =\"text\" className={styles.searchInput}/>\r\n\r\n                </div>\r\n            </div>\r\n            <div className = {styles.right}>\r\n                <button className={styles.startRoomButton}>\r\n                    <img src = \"/images/add-room-icon.png\" alt=\"add-room\"/>\r\n                    <span>Start a room</span>\r\n                    </button>\r\n            </div>\r\n            <div className={styles.roomList}>\r\n                { rooms.map((room)=>(\r\n                    <RoomCard key={room.id} room={room}/>\r\n                    ))}\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Rooms;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}