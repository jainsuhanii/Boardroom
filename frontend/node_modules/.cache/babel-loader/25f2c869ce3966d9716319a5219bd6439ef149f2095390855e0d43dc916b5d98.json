{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useState, useRef } from 'react';\nexport const useStateWithCallback = intialState => {\n  _s();\n  const [state, setState] = useState(intialState);\n  const cbRef = useRef();\n  const updateState = useCallback((newState, cb) => {\n    cbRef.current = cb;\n    setState(prev => {\n      return typeof newState === 'function' ? newState(prev) : newState;\n    });\n  }, []);\n  useEffect(() => {\n    if (cbRef.current) {\n      cbRef.current && cbRef.current(state);\n      cbRef.current = null;\n    }\n  }, [state]);\n  return [state, updateState];\n};\n\n// import { useState, useRef, useEffect, useCallback } from 'react';\n// export const useStateWithCallback = (intialState) => {\n//     const [state, setState] = useState(intialState);\n//     const cbRef = useRef(null);\n\n//     const updateState = useCallback((newState, cb) => {\n//         cbRef.current = cb;\n\n//         setState((prev) =>\n//             typeof newState === 'function' ? newState(prev) : newState\n//         );\n//     }, []);\n\n//     useEffect(() => {\n//         if (cbRef.current) {\n//             cbRef.current(state);\n//             cbRef.current = null;\n//         }\n//     }, [state]);\n\n//     return [state, updateState];\n// };\n_s(useStateWithCallback, \"T7wt2anvVRlbRiyFIfcF8rxebBw=\");","map":{"version":3,"names":["useCallback","useEffect","useState","useRef","useStateWithCallback","intialState","_s","state","setState","cbRef","updateState","newState","cb","current","prev"],"sources":["C:/Users/Admin/Desktop/boardroom/frontend/src/hooks/useStateWithCallback.js"],"sourcesContent":["import { useCallback, useEffect, useState, useRef } from 'react'\r\nexport const useStateWithCallback = (intialState) => {\r\n    const [state, setState] = useState(intialState);\r\n    const cbRef= useRef();\r\n    \r\n    const updateState = useCallback((newState, cb)=>{\r\n        cbRef.current = cb;\r\n        setState((prev)=>{\r\n            return typeof newState === 'function' \r\n            ? newState(prev) \r\n            : newState;\r\n\r\n        });\r\n        },[]);\r\n\r\n        useEffect(() => {\r\n            if (cbRef.current){\r\n                cbRef.current && cbRef.current(state);\r\n            cbRef.current = null;\r\n         }\r\n        }, [state]);\r\n        return [state, updateState];\r\n };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { useState, useRef, useEffect, useCallback } from 'react';\r\n// export const useStateWithCallback = (intialState) => {\r\n//     const [state, setState] = useState(intialState);\r\n//     const cbRef = useRef(null);\r\n\r\n//     const updateState = useCallback((newState, cb) => {\r\n//         cbRef.current = cb;\r\n\r\n//         setState((prev) =>\r\n//             typeof newState === 'function' ? newState(prev) : newState\r\n//         );\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         if (cbRef.current) {\r\n//             cbRef.current(state);\r\n//             cbRef.current = null;\r\n//         }\r\n//     }, [state]);\r\n\r\n//     return [state, updateState];\r\n// };"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAChE,OAAO,MAAMC,oBAAoB,GAAIC,WAAW,IAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACG,WAAW,CAAC;EAC/C,MAAMI,KAAK,GAAEN,MAAM,CAAC,CAAC;EAErB,MAAMO,WAAW,GAAGV,WAAW,CAAC,CAACW,QAAQ,EAAEC,EAAE,KAAG;IAC5CH,KAAK,CAACI,OAAO,GAAGD,EAAE;IAClBJ,QAAQ,CAAEM,IAAI,IAAG;MACb,OAAO,OAAOH,QAAQ,KAAK,UAAU,GACnCA,QAAQ,CAACG,IAAI,CAAC,GACdH,QAAQ;IAEd,CAAC,CAAC;EACF,CAAC,EAAC,EAAE,CAAC;EAELV,SAAS,CAAC,MAAM;IACZ,IAAIQ,KAAK,CAACI,OAAO,EAAC;MACdJ,KAAK,CAACI,OAAO,IAAIJ,KAAK,CAACI,OAAO,CAACN,KAAK,CAAC;MACzCE,KAAK,CAACI,OAAO,GAAG,IAAI;IACvB;EACD,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EACX,OAAO,CAACA,KAAK,EAAEG,WAAW,CAAC;AAClC,CAAC;;AAwCF;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAAJ,EAAA,CAlFaF,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}