{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useRef, useEffect, useCallback } from 'react';\nimport { useStateWithCallback } from './useStateWithCallback';\nconst users = [{\n  id: 1,\n  name: 'John Doe'\n}, {\n  id: 2,\n  name: 'Jane Doe'\n}];\nexport const useWebRTC = (roomId, user) => {\n  _s();\n  const [clients, setClients] = useStateWithCallback(users);\n  const audioElements = useRef({});\n  const connections = useRef({});\n  const localStream = useRef(null);\n  const provideRef = (instance, userId) => {\n    audioElements.current[userId] = instance;\n  };\n  const addNewClients = useCallback((newClient, cb) => {\n    const lookingFor = clients.find(client => client.id === newClient.id);\n    if (lookingFor === undefined) {\n      setClients(existingClients => [...existingClients, newClient], cb);\n    }\n  }, [clients, setClients]);\n\n  //capture media\n  useEffect(() => {\n    const startCapture = async () => {\n      localMediaStream.current = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n    };\n    startCapture().then(stream => {\n      addNewClients(user, () => {\n        const localElement = audioElements.current[user.id];\n        if (localElement) {\n          localElement.volume = 0;\n          localElement.srcObject = localMediastream.current;\n        }\n      });\n    });\n  }, []);\n  return {\n    clients,\n    provideRef\n  };\n};\n_s(useWebRTC, \"TNGU+2wMOYnKiTB7NfheJE2nXCs=\", false, function () {\n  return [useStateWithCallback];\n});","map":{"version":3,"names":["useState","useRef","useEffect","useCallback","useStateWithCallback","users","id","name","useWebRTC","roomId","user","_s","clients","setClients","audioElements","connections","localStream","provideRef","instance","userId","current","addNewClients","newClient","cb","lookingFor","find","client","undefined","existingClients","startCapture","localMediaStream","navigator","mediaDevices","getUserMedia","audio","then","stream","localElement","volume","srcObject","localMediastream"],"sources":["C:/Users/Admin/Desktop/boardroom/frontend/src/hooks/useWebRTC.js"],"sourcesContent":["import { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { useStateWithCallback } from './useStateWithCallback';\r\n\r\nconst users = [\r\n    {\r\n        id: 1,\r\n        name: 'John Doe',\r\n    },\r\n    {\r\n        id: 2,\r\n        name : 'Jane Doe',\r\n    },\r\n\r\n]\r\n\r\nexport const useWebRTC = (roomId, user) => {\r\n    const [clients, setClients]= useStateWithCallback(users);\r\n    const audioElements = useRef({});\r\n    const connections = useRef({});\r\n    const localStream = useRef(null);\r\n\r\n    const provideRef = (instance, userId) => {\r\n            audioElements.current[userId] = instance;\r\n\r\n    };\r\n\r\n    const addNewClients = useCallback(\r\n        (newClient, cb) => {\r\n            const lookingFor = clients.find((client) => client.id === newClient.id);\r\n            if (lookingFor === undefined){\r\n                setClients((existingClients) => [...existingClients, newClient], \r\n                cb\r\n            );}\r\n\r\n        },\r\n        [clients, setClients]\r\n    ) \r\n\r\n    //capture media\r\n    useEffect(() => {   \r\n        const startCapture = async() => {\r\n            localMediaStream.current = \r\n            await navigator.mediaDevices.getUserMedia({\r\n                audio: true\r\n            });\r\n        };\r\n        startCapture().then((stream) => {\r\n            addNewClients(user, ()=>{\r\n                const localElement = audioElements.current[user.id];\r\n                if (localElement){\r\n                    localElement.volume = 0;\r\n                    localElement.srcObject = localMediastream.current;\r\n                }\r\n            })\r\n        })\r\n    }, []);\r\n    return {clients, provideRef};\r\n};\r\n\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAChE,SAASC,oBAAoB,QAAQ,wBAAwB;AAE7D,MAAMC,KAAK,GAAG,CACV;EACIC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE;AACV,CAAC,EACD;EACID,EAAE,EAAE,CAAC;EACLC,IAAI,EAAG;AACX,CAAC,CAEJ;AAED,OAAO,MAAMC,SAAS,GAAGA,CAACC,MAAM,EAAEC,IAAI,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAET,oBAAoB,CAACC,KAAK,CAAC;EACxD,MAAMS,aAAa,GAAGb,MAAM,CAAC,CAAC,CAAC,CAAC;EAChC,MAAMc,WAAW,GAAGd,MAAM,CAAC,CAAC,CAAC,CAAC;EAC9B,MAAMe,WAAW,GAAGf,MAAM,CAAC,IAAI,CAAC;EAEhC,MAAMgB,UAAU,GAAGA,CAACC,QAAQ,EAAEC,MAAM,KAAK;IACjCL,aAAa,CAACM,OAAO,CAACD,MAAM,CAAC,GAAGD,QAAQ;EAEhD,CAAC;EAED,MAAMG,aAAa,GAAGlB,WAAW,CAC7B,CAACmB,SAAS,EAAEC,EAAE,KAAK;IACf,MAAMC,UAAU,GAAGZ,OAAO,CAACa,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACpB,EAAE,KAAKgB,SAAS,CAAChB,EAAE,CAAC;IACvE,IAAIkB,UAAU,KAAKG,SAAS,EAAC;MACzBd,UAAU,CAAEe,eAAe,IAAK,CAAC,GAAGA,eAAe,EAAEN,SAAS,CAAC,EAC/DC,EACJ,CAAC;IAAC;EAEN,CAAC,EACD,CAACX,OAAO,EAAEC,UAAU,CACxB,CAAC;;EAED;EACAX,SAAS,CAAC,MAAM;IACZ,MAAM2B,YAAY,GAAG,MAAAA,CAAA,KAAW;MAC5BC,gBAAgB,CAACV,OAAO,GACxB,MAAMW,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QACtCC,KAAK,EAAE;MACX,CAAC,CAAC;IACN,CAAC;IACDL,YAAY,CAAC,CAAC,CAACM,IAAI,CAAEC,MAAM,IAAK;MAC5Bf,aAAa,CAACX,IAAI,EAAE,MAAI;QACpB,MAAM2B,YAAY,GAAGvB,aAAa,CAACM,OAAO,CAACV,IAAI,CAACJ,EAAE,CAAC;QACnD,IAAI+B,YAAY,EAAC;UACbA,YAAY,CAACC,MAAM,GAAG,CAAC;UACvBD,YAAY,CAACE,SAAS,GAAGC,gBAAgB,CAACpB,OAAO;QACrD;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,OAAO;IAACR,OAAO;IAAEK;EAAU,CAAC;AAChC,CAAC;AAACN,EAAA,CA1CWH,SAAS;EAAA,QACWJ,oBAAoB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}